FROM ubuntu:latest

ENV DEBIAN_FRONTEND=noninteractive

###
### When apt-get'ing, make sure apt-update always run first per RUN
### to ensure Docker layer cache doesn't use a stale apt database.
###

RUN \
  apt-get update && \
  apt-get install -qy --no-install-recommends apt-transport-https build-essential curl software-properties-common && \
  apt-get update

RUN \
  apt-get update && apt-get install -qy --no-install-recommends \
    bc \
    build-essential \
    dhcpcd5 \
    fping \
    gcc \
    git \
    haveged \
    iperf \
    iputils-ping \
    ladvd \
    libpython2.7-dev \
    libpython3-dev \
    libssl-dev \
    libyaml-dev \
    lsof \
    netcat \
    ndisc6 \
    net-tools \
    netcat-openbsd \
    openssl \
    parallel \
    patch \
    psmisc \
    python-pip \
    python3-pip \
    sudo \
    tcpdump \
    tshark \
    udhcpd \
    vlan \
    wpasupplicant

RUN \
  update-rc.d haveged defaults

###
### TODO: pytype may be slightly stale due to Docker caching.
### Specify versions as we do for mininet if possible.
###

RUN \
  git config --global url.https://github.com/.insteadOf git://github.com/ && \
  /bin/echo -e "https://github.com/mininet/mininet\nhttps://github.com/google/pytype.git" |parallel --bar git clone

RUN \
  git clone https://github.com/Bairdo/hostapd-d1xf.git && \
  cd hostapd-d1xf/hostapd && \
  git checkout hostapd-master && \
  make && make install

RUN \
  cd mininet && git checkout 2.2.2 && cd .. && \
  mininet/util/install.sh -nfv

RUN \
  apt-get purge -qy pylint && \
  pip3 install --upgrade pip && \
  easy_install -U pip && \
  pip install --upgrade pip && \
  pip --no-cache-dir install multiprocessing scapy==2.3.2 setuptools wheel virtualenv --upgrade && \
  pip3 install setuptools wheel virtualenv --upgrade

RUN \
  cd pytype && git submodule init && git submodule update && python2 setup.py install && cd ..

###
### To maximize Docker caching, try to keep invariant dependencies above this line.
###

COPY ./ /faucet-src/

RUN \
  pip --no-cache-dir install -r /faucet-src/test-requirements.txt && \
  pip3 --no-cache-dir install -r /faucet-src/requirements.txt && \
  pip3 --no-cache-dir install -r /faucet-src/test-requirements.txt && \
  pip3 --no-cache-dir install /faucet-src

CMD ["/faucet-src/docker/runtests.sh"]
